/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all users
         * @description Get all users
         */
        get: {
            parameters: {
                query?: {
                    user_id?: number | null;
                    first_name?: string;
                    name?: string;
                    email?: string;
                    password?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Get all users */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example true */
                            success: boolean;
                            data: {
                                id: number;
                                name: string;
                                email: string;
                                password: string;
                                firstName: string;
                            }[];
                        };
                    };
                };
                /** @description No users found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create user
         * @description Create a new user
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description User data */
            requestBody?: {
                content: {
                    "application/json": {
                        name: string;
                        email: string;
                        password: string;
                        firstName: string;
                    };
                };
            };
            responses: {
                /** @description User created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example true */
                            success: boolean;
                            data: {
                                id: number;
                                name: string;
                                email: string;
                                password: string;
                                firstName: string;
                            };
                        };
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            message: string;
                        };
                    };
                };
                /** @description Validation error */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/{user_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get user
         * @description Get user by id
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    user_id: number | null;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Get user */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example true */
                            success: boolean;
                            data: {
                                id: number;
                                name: string;
                                email: string;
                                password: string;
                                firstName: string;
                            };
                        };
                    };
                };
                /** @description User not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * Delete user
         * @description Delete user by id
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    user_id: number | null;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Delete user */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example true */
                            success: boolean;
                            data: {
                                id: number;
                                name: string;
                                email: string;
                                password: string;
                                firstName: string;
                            };
                        };
                    };
                };
                /** @description User not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            message: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * Update user
         * @description Update user by id
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    user_id: number | null;
                };
                cookie?: never;
            };
            /** @description User data */
            requestBody?: {
                content: {
                    "application/json": {
                        name: string;
                        email: string;
                        password: string;
                        firstName: string;
                    };
                };
            };
            responses: {
                /** @description User updated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example true */
                            success: boolean;
                            data: {
                                id: number;
                                name: string;
                                email: string;
                                password: string;
                                firstName: string;
                            };
                        };
                    };
                };
                /** @description User not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            message: string;
                        };
                    };
                };
                /** @description Validation error */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            message: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
